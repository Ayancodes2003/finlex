version: '3.8'

services:
  # API Gateway Service
  api-gateway:
    build:
      context: ./backend/api_gateway
      dockerfile: Dockerfile
    ports:
      - "18000:8000"
    environment:
      - SECRET_KEY=your_secret_key_here
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - TRANSACTION_SERVICE_URL=http://transaction-ingest:8001
      - POLICY_SERVICE_URL=http://policy-extractor:8002
      - COMPLIANCE_SERVICE_URL=http://compliance-matcher:8003
      - RAG_SERVICE_URL=http://rag-generator:8004
    depends_on:
      - redis
    networks:
      - finlex-network

  # Transaction Ingest Service
  transaction-ingest:
    build:
      context: ./backend/transaction_ingest
      dockerfile: Dockerfile
    ports:
      - "18001:8001"
    environment:
      - DATABASE_URL=/app/data/transactions.db
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    volumes:
      - transaction-data:/app/data
      - ./data:/app/data/raw:ro
    networks:
      - finlex-network

  # Policy Extractor Service
  policy-extractor:
    build:
      context: ./backend/policy_extractor
      dockerfile: Dockerfile
    ports:
      - "18002:8002"
    environment:
      - DATABASE_URL=/app/data/policies.db
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    volumes:
      - policy-data:/app/data
    networks:
      - finlex-network

  # Compliance Matcher Service
  compliance-matcher:
    build:
      context: ./backend/compliance_matcher
      dockerfile: Dockerfile
    ports:
      - "18003:8003"
    environment:
      - VIOLATIONS_DATABASE_URL=/app/data/violations.db
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    volumes:
      - compliance-data:/app/data
    networks:
      - finlex-network

  # RAG Generator Service
  rag-generator:
    build:
      context: ./backend/rag_generator
      dockerfile: Dockerfile
    ports:
      - "18004:8004"
    environment:
      - REPORTS_DATABASE_URL=/app/data/reports.db
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    volumes:
      - reports-data:/app/data
    networks:
      - finlex-network

  # Vector Database Service
  vector-db:
    build:
      context: ./backend/vector_db
      dockerfile: Dockerfile
    ports:
      - "18010:8010"
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    volumes:
      - vector-data:/app/data
    networks:
      - finlex-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    ports:
      - "16379:6379"
    volumes:
      - redis-data:/data
    networks:
      - finlex-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    ports:
      - "15432:5432"
    environment:
      - POSTGRES_DB=finlex
      - POSTGRES_USER=finlex_user
      - POSTGRES_PASSWORD=finlex_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - finlex-network

  # Nginx for serving frontend
  nginx:
    image: nginx:alpine
    ports:
      - "13000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api-gateway
    networks:
      - finlex-network

# Volumes for persistent data
volumes:
  transaction-data:
  policy-data:
  compliance-data:
  reports-data:
  vector-data:
  redis-data:
  postgres-data:

# Networks
networks:
  finlex-network:
    driver: bridge